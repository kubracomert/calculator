{"ast":null,"code":"var _jsxFileName = \"/home/kubra/Masa\\xFCst\\xFC/calculator/src/SimpleCalculator.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react'; //=======================================================\n// MATH PART\n//=======================================================\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst opsMeta = ['+', '-', '*', '/'];\n\nconst Calculator = () => {\n  let result = '';\n\n  const sumReducer = (acc, value) => acc + value;\n\n  const mulReducer = (acc, value) => acc * value;\n\n  const divReducer = (acc, value) => acc / value;\n\n  const subReducer = (acc, value) => acc - value;\n\n  const sum = args => args.reduce(sumReducer);\n\n  const mul = args => args.reduce(mulReducer);\n\n  const div = args => args.reduce(divReducer);\n\n  const sub = args => args.reduce(subReducer);\n\n  const reset = () => {\n    result = '';\n    return result;\n  };\n\n  const isOpExist = () => {\n    let flag = false;\n    opsMeta.forEach(el => {\n      if (result.includes(el)) flag = el;\n    });\n    return flag;\n  };\n\n  const push = val => {\n    const op = isOpExist();\n\n    if (op && opsMeta.includes(val)) {\n      result = doCalculation(op);\n    }\n\n    result += val;\n    return result;\n  };\n\n  const doCalculation = op => {\n    if (op) {\n      const arr = result.split(op);\n      const arrInt = arr.map(el => parseInt(el));\n\n      switch (op) {\n        case '+':\n          return sum(arrInt) + '';\n\n        case '-':\n          return sub(arrInt) + '';\n\n        case '*':\n          return mul(arrInt) + '';\n\n        case '/':\n          return div(arrInt) + '';\n\n        default:\n          return '';\n      }\n    }\n  };\n\n  const calc = () => {\n    const op = isOpExist();\n    result = doCalculation(op);\n    return result;\n  };\n\n  return {\n    push: push,\n    reset: reset,\n    calc: calc\n  };\n};\n\n_c = Calculator;\nconst calc = Calculator(); //=======================================================\n// UI AND INTERACTION PART\n//=======================================================\n\nconst opButtonsData = [{\n  title: '+',\n  val: '+'\n}, {\n  title: '-',\n  val: '-'\n}, {\n  title: '*',\n  val: '*'\n}, {\n  title: '/',\n  val: '/'\n}];\n\nconst numButtonsDataGen = limit => {\n  const numArr = [];\n\n  for (let i = 0; i < limit; i++) numArr.push({\n    title: `${i}`,\n    val: i\n  });\n\n  return numArr;\n};\n\nconst numButtonsData10 = numButtonsDataGen(10);\n\nconst Button = props => {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: props.onClickHandler,\n    children: props.title\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 13\n  }, this);\n};\n\n_c2 = Button;\n\nconst Screen = props => {\n  const val = props.value === '' ? 0 : props.value;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: val\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 13\n  }, this);\n};\n\n_c3 = Screen;\n\nconst SimpleCalculator = () => {\n  _s();\n\n  const [result, setResult] = useState('');\n  const opBtnsDOM = opButtonsData.map(el => /*#__PURE__*/_jsxDEV(Button, {\n    title: el.title,\n    onClickHandler: () => setResult(calc.push(el.val))\n  }, el.title, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 47\n  }, this));\n  const numBtnsDOM = numButtonsData10.map(el => /*#__PURE__*/_jsxDEV(Button, {\n    title: el.title,\n    onClickHandler: () => setResult(calc.push(el.val))\n  }, el.title, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 51\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calcContainer\",\n    children: [/*#__PURE__*/_jsxDEV(Screen, {\n      value: result\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this), opBtnsDOM, numBtnsDOM, /*#__PURE__*/_jsxDEV(Button, {\n      title: \"Reset\",\n      onClickHandler: () => setResult(calc.reset())\n    }, 'Reset', false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      title: \"=\",\n      onClickHandler: () => setResult(calc.calc())\n    }, '=', false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SimpleCalculator, \"+gLbWhCz1wxZi8Q3iizH9D49vKk=\");\n\n_c4 = SimpleCalculator;\nexport default SimpleCalculator;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Calculator\");\n$RefreshReg$(_c2, \"Button\");\n$RefreshReg$(_c3, \"Screen\");\n$RefreshReg$(_c4, \"SimpleCalculator\");","map":{"version":3,"sources":["/home/kubra/Masaüstü/calculator/src/SimpleCalculator.js"],"names":["React","useState","opsMeta","Calculator","result","sumReducer","acc","value","mulReducer","divReducer","subReducer","sum","args","reduce","mul","div","sub","reset","isOpExist","flag","forEach","el","includes","push","val","op","doCalculation","arr","split","arrInt","map","parseInt","calc","opButtonsData","title","numButtonsDataGen","limit","numArr","i","numButtonsData10","Button","props","onClickHandler","Screen","SimpleCalculator","setResult","opBtnsDOM","numBtnsDOM"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B,C,CAEA;AACA;AACA;;;AAEA,MAAMC,OAAO,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,CAAhB;;AACA,MAAMC,UAAU,GAAG,MAAM;AACrB,MAAIC,MAAM,GAAG,EAAb;;AACA,QAAMC,UAAU,GAAG,CAACC,GAAD,EAAMC,KAAN,KAAgBD,GAAG,GAAGC,KAAzC;;AACA,QAAMC,UAAU,GAAG,CAACF,GAAD,EAAMC,KAAN,KAAgBD,GAAG,GAAGC,KAAzC;;AACA,QAAME,UAAU,GAAG,CAACH,GAAD,EAAMC,KAAN,KAAgBD,GAAG,GAAGC,KAAzC;;AACA,QAAMG,UAAU,GAAG,CAACJ,GAAD,EAAMC,KAAN,KAAgBD,GAAG,GAAGC,KAAzC;;AAEA,QAAMI,GAAG,GAAIC,IAAD,IAAUA,IAAI,CAACC,MAAL,CAAYR,UAAZ,CAAtB;;AACA,QAAMS,GAAG,GAAIF,IAAD,IAAUA,IAAI,CAACC,MAAL,CAAYL,UAAZ,CAAtB;;AACA,QAAMO,GAAG,GAAIH,IAAD,IAAUA,IAAI,CAACC,MAAL,CAAYJ,UAAZ,CAAtB;;AACA,QAAMO,GAAG,GAAIJ,IAAD,IAAUA,IAAI,CAACC,MAAL,CAAYH,UAAZ,CAAtB;;AAEA,QAAMO,KAAK,GAAG,MAAM;AAChBb,IAAAA,MAAM,GAAG,EAAT;AACA,WAAOA,MAAP;AACH,GAHD;;AAKA,QAAMc,SAAS,GAAG,MAAM;AACpB,QAAIC,IAAI,GAAG,KAAX;AACAjB,IAAAA,OAAO,CAACkB,OAAR,CAAgBC,EAAE,IAAI;AAClB,UAAIjB,MAAM,CAACkB,QAAP,CAAgBD,EAAhB,CAAJ,EAAyBF,IAAI,GAAGE,EAAP;AAC5B,KAFD;AAGA,WAAOF,IAAP;AACH,GAND;;AAQA,QAAMI,IAAI,GAAIC,GAAD,IAAS;AAClB,UAAMC,EAAE,GAAGP,SAAS,EAApB;;AACA,QAAIO,EAAE,IAAIvB,OAAO,CAACoB,QAAR,CAAiBE,GAAjB,CAAV,EAAiC;AAC7BpB,MAAAA,MAAM,GAAGsB,aAAa,CAACD,EAAD,CAAtB;AACH;;AACDrB,IAAAA,MAAM,IAAIoB,GAAV;AACA,WAAOpB,MAAP;AACH,GAPD;;AASA,QAAMsB,aAAa,GAAID,EAAD,IAAQ;AAC1B,QAAIA,EAAJ,EAAQ;AACJ,YAAME,GAAG,GAAGvB,MAAM,CAACwB,KAAP,CAAaH,EAAb,CAAZ;AACA,YAAMI,MAAM,GAAGF,GAAG,CAACG,GAAJ,CAAQT,EAAE,IAAIU,QAAQ,CAACV,EAAD,CAAtB,CAAf;;AACA,cAAQI,EAAR;AACI,aAAK,GAAL;AACI,iBAAOd,GAAG,CAACkB,MAAD,CAAH,GAAc,EAArB;;AACJ,aAAK,GAAL;AACI,iBAAOb,GAAG,CAACa,MAAD,CAAH,GAAc,EAArB;;AACJ,aAAK,GAAL;AACI,iBAAOf,GAAG,CAACe,MAAD,CAAH,GAAc,EAArB;;AACJ,aAAK,GAAL;AACI,iBAAOd,GAAG,CAACc,MAAD,CAAH,GAAc,EAArB;;AACJ;AACI,iBAAO,EAAP;AAVR;AAYH;AAGJ,GAnBD;;AAsBA,QAAMG,IAAI,GAAG,MAAM;AACf,UAAMP,EAAE,GAAGP,SAAS,EAApB;AACAd,IAAAA,MAAM,GAAGsB,aAAa,CAACD,EAAD,CAAtB;AACA,WAAOrB,MAAP;AACH,GAJD;;AAOA,SAAO;AAACmB,IAAAA,IAAI,EAAEA,IAAP;AAAaN,IAAAA,KAAK,EAAEA,KAApB;AAA2Be,IAAAA,IAAI,EAAEA;AAAjC,GAAP;AACH,CAhED;;KAAM7B,U;AAkEN,MAAM6B,IAAI,GAAG7B,UAAU,EAAvB,C,CAGA;AACA;AACA;;AACA,MAAM8B,aAAa,GAAG,CAClB;AAACC,EAAAA,KAAK,EAAE,GAAR;AAAaV,EAAAA,GAAG,EAAE;AAAlB,CADkB,EAElB;AAACU,EAAAA,KAAK,EAAE,GAAR;AAAaV,EAAAA,GAAG,EAAE;AAAlB,CAFkB,EAGlB;AAACU,EAAAA,KAAK,EAAE,GAAR;AAAaV,EAAAA,GAAG,EAAE;AAAlB,CAHkB,EAIlB;AAACU,EAAAA,KAAK,EAAE,GAAR;AAAaV,EAAAA,GAAG,EAAE;AAAlB,CAJkB,CAAtB;;AAOA,MAAMW,iBAAiB,GAAIC,KAAD,IAAW;AACjC,QAAMC,MAAM,GAAG,EAAf;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,KAApB,EAA2BE,CAAC,EAA5B,EAAgCD,MAAM,CAACd,IAAP,CAAY;AAACW,IAAAA,KAAK,EAAG,GAAEI,CAAE,EAAb;AAAgBd,IAAAA,GAAG,EAAEc;AAArB,GAAZ;;AAChC,SAAOD,MAAP;AACH,CAJD;;AAKA,MAAME,gBAAgB,GAAGJ,iBAAiB,CAAC,EAAD,CAA1C;;AAEA,MAAMK,MAAM,GAAIC,KAAD,IAAW;AACtB,sBAAQ;AAAQ,IAAA,OAAO,EAAEA,KAAK,CAACC,cAAvB;AAAA,cAAwCD,KAAK,CAACP;AAA9C;AAAA;AAAA;AAAA;AAAA,UAAR;AACH,CAFD;;MAAMM,M;;AAIN,MAAMG,MAAM,GAAIF,KAAD,IAAW;AACtB,QAAMjB,GAAG,GAAGiB,KAAK,CAAClC,KAAN,KAAgB,EAAhB,GAAqB,CAArB,GAAyBkC,KAAK,CAAClC,KAA3C;AACA,sBAAQ;AAAA,cAAMiB;AAAN;AAAA;AAAA;AAAA;AAAA,UAAR;AACH,CAHD;;MAAMmB,M;;AAMN,MAAMC,gBAAgB,GAAG,MAAM;AAAA;;AAE3B,QAAM,CAACxC,MAAD,EAASyC,SAAT,IAAsB5C,QAAQ,CAAC,EAAD,CAApC;AAEA,QAAM6C,SAAS,GAAGb,aAAa,CAACH,GAAd,CAAkBT,EAAE,iBAAI,QAAC,MAAD;AAAuB,IAAA,KAAK,EAAEA,EAAE,CAACa,KAAjC;AACQ,IAAA,cAAc,EAAE,MAAMW,SAAS,CAACb,IAAI,CAACT,IAAL,CAAUF,EAAE,CAACG,GAAb,CAAD;AADvC,KAAaH,EAAE,CAACa,KAAhB;AAAA;AAAA;AAAA;AAAA,UAAxB,CAAlB;AAGA,QAAMa,UAAU,GAAGR,gBAAgB,CAACT,GAAjB,CAAqBT,EAAE,iBAAI,QAAC,MAAD;AAAuB,IAAA,KAAK,EAAEA,EAAE,CAACa,KAAjC;AACQ,IAAA,cAAc,EAAE,MAAMW,SAAS,CAACb,IAAI,CAACT,IAAL,CAAUF,EAAE,CAACG,GAAb,CAAD;AADvC,KAAaH,EAAE,CAACa,KAAhB;AAAA;AAAA;AAAA;AAAA,UAA3B,CAAnB;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,4BACI,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAE9B;AAAf;AAAA;AAAA;AAAA;AAAA,YADJ,EAEK0C,SAFL,EAGKC,UAHL,eAII,QAAC,MAAD;AAAoB,MAAA,KAAK,EAAC,OAA1B;AAAkC,MAAA,cAAc,EAAE,MAAMF,SAAS,CAACb,IAAI,CAACf,KAAL,EAAD;AAAjE,OAAY,OAAZ;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI,QAAC,MAAD;AAAgB,MAAA,KAAK,EAAC,GAAtB;AAA0B,MAAA,cAAc,EAAE,MAAM4B,SAAS,CAACb,IAAI,CAACA,IAAL,EAAD;AAAzD,OAAY,GAAZ;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CAlBD;;GAAMY,gB;;MAAAA,gB;AAqBN,eAAeA,gBAAf","sourcesContent":["import React, {useState} from 'react';\n\n//=======================================================\n// MATH PART\n//=======================================================\n\nconst opsMeta = ['+', '-', '*', '/'];\nconst Calculator = () => {\n    let result = '';\n    const sumReducer = (acc, value) => acc + value;\n    const mulReducer = (acc, value) => acc * value;\n    const divReducer = (acc, value) => acc / value;\n    const subReducer = (acc, value) => acc - value;\n\n    const sum = (args) => args.reduce(sumReducer);\n    const mul = (args) => args.reduce(mulReducer);\n    const div = (args) => args.reduce(divReducer);\n    const sub = (args) => args.reduce(subReducer);\n\n    const reset = () => {\n        result = '';\n        return result\n    }\n\n    const isOpExist = () => {\n        let flag = false;\n        opsMeta.forEach(el => {\n            if (result.includes(el)) flag = el;\n        });\n        return flag;\n    }\n\n    const push = (val) => {\n        const op = isOpExist();\n        if (op && opsMeta.includes(val)) {\n            result = doCalculation(op);\n        }\n        result += val;\n        return result;\n    }\n\n    const doCalculation = (op) => {\n        if (op) {\n            const arr = result.split(op);\n            const arrInt = arr.map(el => parseInt(el));\n            switch (op) {\n                case '+':\n                    return sum(arrInt) + '';\n                case '-':\n                    return sub(arrInt) + '';\n                case '*':\n                    return mul(arrInt) + '';\n                case '/':\n                    return div(arrInt) + '';\n                default:\n                    return '';\n            }\n        }\n\n\n    }\n\n\n    const calc = () => {\n        const op = isOpExist();\n        result = doCalculation(op);\n        return result;\n    }\n\n\n    return {push: push, reset: reset, calc: calc}\n}\n\nconst calc = Calculator();\n\n\n//=======================================================\n// UI AND INTERACTION PART\n//=======================================================\nconst opButtonsData = [\n    {title: '+', val: '+'},\n    {title: '-', val: '-'},\n    {title: '*', val: '*'},\n    {title: '/', val: '/'},\n]\n\nconst numButtonsDataGen = (limit) => {\n    const numArr = [];\n    for (let i = 0; i < limit; i++) numArr.push({title: `${i}`, val: i});\n    return numArr;\n}\nconst numButtonsData10 = numButtonsDataGen(10);\n\nconst Button = (props) => {\n    return (<button onClick={props.onClickHandler}>{props.title}</button>)\n}\n\nconst Screen = (props) => {\n    const val = props.value === '' ? 0 : props.value;\n    return (<div>{val}</div>)\n}\n\n\nconst SimpleCalculator = () => {\n\n    const [result, setResult] = useState('');\n\n    const opBtnsDOM = opButtonsData.map(el => <Button key={el.title} title={el.title}\n                                                      onClickHandler={() => setResult(calc.push(el.val))}/>);\n\n    const numBtnsDOM = numButtonsData10.map(el => <Button key={el.title} title={el.title}\n                                                          onClickHandler={() => setResult(calc.push(el.val))}/>);\n    return (\n        <div className='calcContainer'>\n            <Screen value={result}/>\n            {opBtnsDOM}\n            {numBtnsDOM}\n            <Button key='Reset' title='Reset' onClickHandler={() => setResult(calc.reset())}/>\n            <Button key='=' title='=' onClickHandler={() => setResult(calc.calc())}/>\n        </div>\n    )\n}\n\n\nexport default SimpleCalculator;"]},"metadata":{},"sourceType":"module"}